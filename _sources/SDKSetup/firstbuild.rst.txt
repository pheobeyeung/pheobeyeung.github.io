Compile and Deploy URCap Example 
================================

Now that your dev environment has been set up, you can start using the new features of our SDK.  
There have been major changes to the way URCaps are structured, compiled, and deployed to the robot or URSim. 
This section will walk you through building your first URCap on PolyScope 6, with a prewritten example that implements the different structure. 

DockerDaemon Example
--------------------
This is a URCap example that contains a Docker Daemon. 

Compile with urcapctl 
~~~~~~~~~~~~~~~~~~~~~
#. Copy the example project by running 

.. code:: bash

    cp -r /tmp/sdk/samples/swing/com.ur.urcap.examples.dockerdaemon dockerdaemon

The **dockerdaemon** folder should now be in the */workspaces/urcapx-dev directory.* 
#. Compile the URCap with the UR CLI tool by running 

.. code:: bash

    urcapctl build [urcapx_src_dir] [urcapx_dst_dir]
    #For this example, you'd run: $ urcapctl build dockerdaemon .

You should now see the *dockerdaemon-v1.0.urcapx* file instead the destination folder.

Deploy with urcapctl 
~~~~~~~~~~~~~~~~~~~~

#. Open up URSim, or configure your robot's network so that it can communicate to the device you built the URCap.
#. Navigate to the location of your built *.urcapx* from your VSCode terminal.
#. Deploy the URCap by running 

.. code:: bash

    urcapctl deploy [dst_ip_address] [path_to_urcapx]
    #For this example, the URSim IP Address was 172.17.0.3 
    #so the command was: $ urcapctl deploy 172.17.0.3 dockerdaemon-v1.0.urcapx

If you have already installed the URCap, you will need to use the *--replace* flag.
